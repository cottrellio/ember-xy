{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/app.lint-test.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/xy-drawer/component-test.js","dummy/tests/integration/components/xy-grid-item/component-test.js","dummy/tests/integration/components/xy-grid/component-test.js","dummy/tests/integration/components/xy-icon/component-test.js","dummy/tests/integration/components/xy-layout/component-test.js","dummy/tests/integration/components/xy-menu-icon/component-test.js","dummy/tests/integration/components/xy-nav-item/component-test.js","dummy/tests/integration/components/xy-part/component-test.js","dummy/tests/integration/components/xy-section/component-test.js","dummy/tests/test-helper.js","dummy/tests/tests.lint-test.js","dummy/tests/unit/mixins/padding-margin-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('application/controller.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/controller.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('application/index/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/index/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('application/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-drawer/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-drawer/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-grid-item/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-grid-item/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-grid/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-grid/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-icon/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-icon/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-layout/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-layout/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-menu-icon/controller.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-menu-icon/controller.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-menu-icon/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-menu-icon/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-part/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-part/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('comps/xy-section/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'comps/xy-section/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  var run = Ember.run;\n  function destroyApp(application) {\n    run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'dummy/app', 'dummy/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  var merge = Ember.merge;\n  var run = Ember.run;\n  function startApp(attrs) {\n    var attributes = merge({}, _environment.default.APP);\n    attributes = merge(attributes, attrs); // use defaults, but you can override;\n\n    return run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('dummy/tests/integration/components/xy-drawer/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-drawer', 'Integration | Component | xy drawer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"rlty12wG\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-drawer\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"PbpbVWYC\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-drawer\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-grid-item/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-grid-item', 'Integration | Component | xy grid item', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"7svaJ+yz\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-grid-item\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"EUdUnyiq\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-grid-item\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-grid/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-grid', 'Integration | Component | xy grid', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"sTcsW5Z1\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-grid\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/XRQl8Jx\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-grid\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-icon/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-icon', 'Integration | Component | xy icon', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"i9jkFTUj\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-icon\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"3zk6iNkE\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-icon\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-layout/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-layout', 'Integration | Component | xy layout', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"C2ax91xA\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-layout\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"iwgaVVJr\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-layout\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-menu-icon/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-menu-icon', 'Integration | Component | xy menu icon', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"qy2ZsNHR\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-menu-icon\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n\n  (0, _emberQunit.test)('it toggles local-class `open` on click', function (assert) {\n    // Set local styles.\n    this.set('__styles__', {\n      open: '--open'\n    });\n\n    // Render component.\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"NoeZp0cJ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-menu-icon\\\",null,[[\\\"__styles__\\\"],[[20,[\\\"__styles__\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    // Click component to open.\n    this.$('.xy-menu-icon').click();\n\n    // Ensure `--open` is there.\n    assert.ok(this.$('.xy-menu-icon').hasClass('--open'));\n\n    // Click component to close.\n    this.$('.xy-menu-icon').click();\n\n    // Ensure `--open` is not there.\n    assert.ok(!this.$('.xy-menu-icon').hasClass('--open'));\n  });\n});","define('dummy/tests/integration/components/xy-nav-item/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-nav-item', 'Integration | Component | xy nav item', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"n310Wf6O\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-nav-item\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"2uA2pn3A\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-nav-item\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-part/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('xy-part', 'Integration | Component | xy part', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"QCU/R03n\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-part\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"+EUuB1c0\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"xy-part\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/xy-section/component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  var A = Ember.A;\n  var $ = Ember.$;\n\n\n  (0, _emberQunit.moduleForComponent)('xy-section', 'Integration | Component | xy section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"o2hkRjoK\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"xy-section\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   *\n   * PADDING\n   *\n  \\* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- *\\\n   * left | top | right | bottom\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('padding xs left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"7JUxnuhN\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xs xs xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xs', 'pad-t-xs', 'pad-r-xs', 'pad-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding sm left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"3wDGnOV0\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"sm sm sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-sm', 'pad-t-sm', 'pad-r-sm', 'pad-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding md left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"1rP0O/n1\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"md md md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-md', 'pad-t-md', 'pad-r-md', 'pad-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding lg left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"TMfWb3zT\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"lg lg lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-lg', 'pad-t-lg', 'pad-r-lg', 'pad-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding xl left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"eNfuhCSy\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xl xl xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xl', 'pad-t-xl', 'pad-r-xl', 'pad-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding none left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"kZ9dZLpJ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"none none none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-none', 'pad-t-none', 'pad-r-none', 'pad-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * top | horizontal | bottom\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('padding xs top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"b7+pYLvp\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xs xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xs', 'pad-t-xs', 'pad-r-xs', 'pad-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding sm top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Pq4a+5eZ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"sm sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-sm', 'pad-t-sm', 'pad-r-sm', 'pad-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding md top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/b8zTbgq\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"md md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-md', 'pad-t-md', 'pad-r-md', 'pad-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding lg top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"o0NdBsRO\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"lg lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-lg', 'pad-t-lg', 'pad-r-lg', 'pad-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding xl top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"GRQ9R19w\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xl xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xl', 'pad-t-xl', 'pad-r-xl', 'pad-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding none top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"uHX8qaji\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"none none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-none', 'pad-t-none', 'pad-r-none', 'pad-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * vertical | horizontal\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('padding xs vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"q9CJoaBm\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xs', 'pad-t-xs', 'pad-r-xs', 'pad-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding sm vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M4vNkf3i\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-sm', 'pad-t-sm', 'pad-r-sm', 'pad-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding md vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"v+UY8c7h\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-md', 'pad-t-md', 'pad-r-md', 'pad-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding lg vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"TyUZBp4Z\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-lg', 'pad-t-lg', 'pad-r-lg', 'pad-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding xl vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"5nGRL2YH\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xl', 'pad-t-xl', 'pad-r-xl', 'pad-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding none vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"qknaSdYy\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-none', 'pad-t-none', 'pad-r-none', 'pad-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * all\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('padding xs all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"+zCKN/E0\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xs', 'pad-t-xs', 'pad-r-xs', 'pad-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding sm all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"eQUGnyM3\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-sm', 'pad-t-sm', 'pad-r-sm', 'pad-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding md all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"FC9cPUfZ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-md', 'pad-t-md', 'pad-r-md', 'pad-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding lg vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"7sh2nnOz\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-lg', 'pad-t-lg', 'pad-r-lg', 'pad-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding xl all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Pem4Mzqi\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-xl', 'pad-t-xl', 'pad-r-xl', 'pad-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('padding none all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"njaSjwLS\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"padding\\\"],[\\\"none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['pad-l-none', 'pad-t-none', 'pad-r-none', 'pad-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   *\n   * MARGIN\n   *\n  \\* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- *\\\n   * left | top | right | bottom\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('margin xs left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"BQrN/Cco\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xs xs xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xs', 'mar-t-xs', 'mar-r-xs', 'mar-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin sm left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"I5YkVIoY\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"sm sm sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-sm', 'mar-t-sm', 'mar-r-sm', 'mar-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin md left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"x5/NoGPE\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"md md md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-md', 'mar-t-md', 'mar-r-md', 'mar-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin lg left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"j8rErdPw\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"lg lg lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-lg', 'mar-t-lg', 'mar-r-lg', 'mar-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin xl left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Z1FPIF1X\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xl xl xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xl', 'mar-t-xl', 'mar-r-xl', 'mar-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin none left | top | right | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"NzijP7u6\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"none none none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-none', 'mar-t-none', 'mar-r-none', 'mar-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * top | horizontal | bottom\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('margin xs top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"fRe8CRRA\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xs xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xs', 'mar-t-xs', 'mar-r-xs', 'mar-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin sm top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"8D9uv/op\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"sm sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-sm', 'mar-t-sm', 'mar-r-sm', 'mar-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin md top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"UnT3hmiP\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"md md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-md', 'mar-t-md', 'mar-r-md', 'mar-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin lg top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"kD+EImla\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"lg lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-lg', 'mar-t-lg', 'mar-r-lg', 'mar-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin xl top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"4crFANVc\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xl xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xl', 'mar-t-xl', 'mar-r-xl', 'mar-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin none top | horizontal | bottom works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"uIYJ3yQW\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"none none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-none', 'mar-t-none', 'mar-r-none', 'mar-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * vertical | horizontal\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('margin xs vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"uLiRfq0F\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xs xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xs', 'mar-t-xs', 'mar-r-xs', 'mar-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin sm vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"+8SqmLlx\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"sm sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-sm', 'mar-t-sm', 'mar-r-sm', 'mar-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin md vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"KBx1KbDj\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"md md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-md', 'mar-t-md', 'mar-r-md', 'mar-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin lg vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"O0gG/s3K\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"lg lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-lg', 'mar-t-lg', 'mar-r-lg', 'mar-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin xl vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"y7LQEKjS\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xl xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xl', 'mar-t-xl', 'mar-r-xl', 'mar-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin none vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"lz6BHdht\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"none none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-none', 'mar-t-none', 'mar-r-none', 'mar-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  /* -------------------------------------------------------------------------- *\\\n   * all\n  \\* -------------------------------------------------------------------------- */\n\n  (0, _emberQunit.test)('margin xs all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"YT7+/q1q\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xs\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xs', 'mar-t-xs', 'mar-r-xs', 'mar-b-xs'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin sm all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Cat2Yj93\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"sm\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-sm', 'mar-t-sm', 'mar-r-sm', 'mar-b-sm'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin md all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"9QNv7tvo\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"md\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-md', 'mar-t-md', 'mar-r-md', 'mar-b-md'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin lg vertical | horizontal works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"WMdF9T+g\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"lg\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-lg', 'mar-t-lg', 'mar-r-lg', 'mar-b-lg'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin xl all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"C3O4W3T4\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"xl\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-xl', 'mar-t-xl', 'mar-r-xl', 'mar-b-xl'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n\n  (0, _emberQunit.test)('margin none all works', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"0+QsOkEi\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"xy-section\\\",null,[[\\\"margin\\\"],[\\\"none\\\"]]],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n    var actual = A($('xy-section')[0].className.split(' '));\n    var expected = ['mar-l-none', 'mar-t-none', 'mar-r-none', 'mar-b-none'];\n\n    expected.forEach(function (e) {\n      assert.ok(actual.any(function (a) {\n        return a.includes(e);\n      }), e + ' is not found');\n    });\n  });\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('dummy/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-drawer/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-drawer/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-grid-item/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-grid-item/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-grid/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-grid/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-icon/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-icon/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-layout/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-layout/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-menu-icon/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-menu-icon/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-nav-item/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-nav-item/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-part/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-part/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/xy-section/component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/xy-section/component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/mixins/padding-margin-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/padding-margin-test.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/unit/mixins/padding-margin-test', ['ember-xy/mixins/padding-margin', 'qunit'], function (_paddingMargin, _qunit) {\n  'use strict';\n\n  var EmberObject = Ember.Object;\n\n\n  (0, _qunit.module)('Unit | Mixin | padding margin');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var PaddingMarginObject = EmberObject.extend(_paddingMargin.default);\n    var subject = PaddingMarginObject.create();\n    assert.ok(subject);\n  });\n});","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnzl9BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;","file":"tests.js"}